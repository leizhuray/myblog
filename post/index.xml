<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>博客 on 首页</title>
    <link>http://leizhuray.me/myblog/post/</link>
    <description>Recent content in 博客 on 首页</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 02 Mar 2017 12:00:00 -0500</lastBuildDate>
    
	<atom:link href="http://leizhuray.me/myblog/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Mac 合盖掉电(休眠掉电)解决方法</title>
      <link>http://leizhuray.me/myblog/post/mac_battery/</link>
      <pubDate>Wed, 31 Mar 2021 10:49:26 +0800</pubDate>
      
      <guid>http://leizhuray.me/myblog/post/mac_battery/</guid>
      <description>Mac在合盖之后还在掉电，第二天打开一看，只有40%的电量。针对合盖掉电的问题可能有以下解决方法。
1、重置Mac的SMC 根据Mac官方的提示，重置爱SMC可以解决某些电源，电池，风扇相关的问题。重置方法如下： 如何重置 Mac 的 SMC
​Mac官方针对不同型号的电脑都给出了相关的设置方法。根据教程设置后可能可以解决相关的问题。
2、在终端中修改电源选项 在终端中查询相关状态，不了解终端是什么东东的朋友可以翻看我之前的文章。 终端
简洁版本： 为了节约大家时间，这里给一个简单版本。
 1.合盖后关闭网络唤醒：  sudo pmset -b tcpkeepalive 0  2.减小合盖后数据在内存中保留的时间（默认8个小时 = 28800秒）  sudo pmset -b standbydelay 14400  3.减小装数据写入硬盘彻底断电的时间  sudo pmset -b autopoweroffdelay 14400  4.修改休眠模式  sudo pmset -b hibernatemode 25 （需要说明的是，修改为25之后，唤醒会稍微变慢，大约需要4~5s，介意者可修改为3） 注意以上操作都需要在敲入命令后输入自己的开机密码然后按回车。
详细版本 在终端中输入pmset -g，查看相关的电源设置(power managment settings，电源管理设置的意思)；在插电源使用时看到的是插电源状态下的设置，合盖掉电应该是电池状态下的问题，建议拔掉电源后再输入指令。
 System-wide power settings: Currently in use: lidwake 1 autopoweroff 1 standbydelayhigh 86400 autopoweroffdelay 28800 proximitywake 0 standby 1 standbydelaylow 10800 ttyskeepawake 1 hibernatemode 25 powernap 0 gpuswitch 2 hibernatefile /var/vm/sleepimage highstandbythreshold 50 displaysleep 5 sleep 5 (sleep prevented by timed) acwake 0 halfdim 1 tcpkeepalive 0 disksleep 10 输入pmset -g后会输出现在相关的状态信息，我这里把出现的各个项目按顺序简要说明一下。</description>
    </item>
    
    <item>
      <title>流体程序介绍</title>
      <link>http://leizhuray.me/myblog/post/hydro_code/</link>
      <pubDate>Sun, 21 Feb 2021 20:39:45 +0800</pubDate>
      
      <guid>http://leizhuray.me/myblog/post/hydro_code/</guid>
      <description>简单的一维流体程序  记得我第一次接触CFD(computational fluid dynamics)时，一脸的忙乱。师兄丢给我一本Toro的Riemann Solvers and Numerical Methods for Fluid Dynamics。这本书确实挺好的，但对零基础的我这样的小白来说，看完之后还是一脸懵逼，依然不明白它有什么用。经过最近两年的捶打，我越来越觉得入门应该是自己动手去写一个简单的流体code，边学边用，才会更明白书中的那些公式所代表的物理内涵。
欧拉方程  与Toro的书类似，我们也从欧拉方程开始。欧拉方程是用来描述无粘性可压缩（或者不可压缩）流体的控制方程，包含质量守恒，动量守恒和能量守恒三个方程式；是非线性双曲偏微分方程。守恒形式为：
$$ \frac{\partial \mathbf{U}}{\partial t}+\frac{\partial \mathbf{F}}{\partial x}+\frac{\partial \mathbf{G}}{\partial y}+\frac{\partial \mathbf{H}}{\partial z}=0 $$
 其中 $$ \left.\begin{array}{l}\mathbf{U}=\left[\begin{array}{c}\rho \ \rho u \ \rho v \ \rho w \ E\end{array}\right], \mathbf{F}=\left[\begin{array}{c}\rho u \ \rho u^{2}+p \ \rho u v \ \rho u w \ u(E+p)\end{array}\right] \ \mathbf{G}=\left[\begin{array}{c}\rho v \ \rho u^{2}+p \ \rho v w \ v(E+p)\end{array}\right], \mathbf{H}=\left[\begin{array}{c}\rho w \ \rho u w \ \rho v w \ \rho w^{2}+p \ w(E+p)\end{array}\right]\end{array}\right} $$</description>
    </item>
    
    <item>
      <title>Flash 程序使用总结(3)</title>
      <link>http://leizhuray.me/myblog/post/flash_03/</link>
      <pubDate>Mon, 01 Feb 2021 20:39:45 +0800</pubDate>
      
      <guid>http://leizhuray.me/myblog/post/flash_03/</guid>
      <description>Flash程序使用（三）  在上一章节中主要写了LaserSlab case中各个文件的主要内容及其作用。理解这些文件是非常重要的，后续如果想修改自己的case，每个文件都需要去掌握的。这一节我们讲一下如何安装运行LaserSlab case以及利用Visit程序来进行初步的可视化，后续会讲解利用yt程序来进行后处理操作。
LaserSlab案例运行及数据可视  关于LaserSlab case的详细信息可以在Flash的User guide（4.6版本）的第541页的34.7.5节。书上有对这部分内容的详细讲解，包括每个命令所代表的含义，以及flash.par文件中每部分命令语句的作用。今天主要想讲的是case生成以及其后处理方法。
LaserSlab的setup命令  在Flash文件夹下运行以下命令:
./setup -auto LaserSlab -2d -nxb=16 -nyb=16 +hdf5typeio species=cham,targ +mtmmmt +laser +uhd3t +mgd mgd_meshgroups=6 -parfile=example.par -objdir=LaserSlab  将在LaserSlab文件夹中生成激光打靶case。我们cd进入该文件夹之后，输入make -j 4可以进行并行编译，在编译成功后对生成的flash4程序运行，即可以输出以“lasslab_”开头的一系列数据文件（如果电脑或者服务器有多个核的，建议并行运行，速度更快）。这个就是生成的数据。生成的数据类型主要有两类，一类是以“chk”为关键词的完全数据，一个是以“cnt”为关键词的部分数据类型。“cnt”数据文件中的输出可以在flash.par中通过&amp;quot;plot_var_n&amp;quot;关键字指定。
Visit数据可视化  VisIt是劳伦斯利福摩尔国家实验室开发的一个开源型交互式并行可视化与图形分析工具，用于查看科学数据。利用VisIt，可以可视化二维几何模型以及三维空间结构化和非结构化网格之中所定义的标量场和矢量场。其可以支持绘制很多模拟软件运算产生的数据。接下来通过图示的方法说明利用VisIt对Flash数据文件进行可视化绘图的操作。
Visit软件下载
 Visit可以从官方链接上来下载。根据自己电脑系统的版本来选择合适的安装包安装即可。  可视化操作步骤
 打开软件后选择open，进入到存储数据的文件夹； 在open file type as那一行中选择FLASH，必须选为flash，否则会出错 单击OK，载入数据  绘制密度信息
 单击Add，选择伪彩图项目，选择dens项 在图2中我们可以发现我们的Al靶放置于BOX上端 dens数据的单位是$g/cm^3$  绘制激光能量沉积
 单击Add，选择伪彩图项目，选择depo项 然后点击工具栏中的depo，弹出参数修改按钮 修改最大值以及不透明程度，可以将其叠加在dens图上 通过depo项可简单观察激光光路轨迹  其他的项目可以自行探索，在Visit中也可以实现非常复杂的绘图操作，特别是有些三维绘图，利用Visit会非常简单。
后记 接下来一章，我们会分析Flash中自适应网格的划分方法，这对自己编写后处理脚本非常重要。在这之前我可能会写一篇利用python写一个简单的一维流体程序文章，主要讲解理想欧拉方程。</description>
    </item>
    
    <item>
      <title>Flash 程序使用总结(2)</title>
      <link>http://leizhuray.me/myblog/post/flash_02/</link>
      <pubDate>Sun, 31 Jan 2021 20:39:45 +0800</pubDate>
      
      <guid>http://leizhuray.me/myblog/post/flash_02/</guid>
      <description>Flash程序使用（二）  上一章节中讲了Flash的发展和程序安装，并且我们以Sedov激波为例运行了Flash程序。在这一章节中我们将讲解Flash中一个模拟case的组成部分。
模拟案例-以LaserSlab为例  Flash中提供了丰富的模拟案例。俗话说例子是最好的老师。学习写一个新case肯定需要从读懂已经有的case开始。Flash中所有的case存放在Flash文件夹中的source/Simulation/SimulationMain中，感兴趣的同学解压后可以到该路径下查看。大部分文件夹中都是一个完整的case。由于国内利用Flash做研究的学者大部分都是激光等离子体领域的人，所以在这里我们通过Flash中的LaserSlab这个case来进行讲解。在这个case中基本涉及到了我们上一节所提到的大部分的模块。相信大家可以通过理解这个case一通百通，从而可以写出自己所想要的case。
文件组成  进入LaserSlab文件夹后，看到一大堆文件，心头不由一紧。这也是我第一次看到时的想法。不要担心，我们可以化繁就简，这里面很多文件都是不同情况下的输入文件，就是你所看到的后缀名为.par的文件。组成一个case的基本文件大部分情况下只有6个，分别为Config, Simulation_init.F90, Simulation_data.F90, Simulation_initBlock.F90, Makefile以及flash.par。接下来我们将详细讲解每一个文件中的内容以及其作用。
Config文件  Config文件的主要作用在于确定要用的模块以及定义模拟中会用到的主要参数。如下图所示为LaserSlab案例下Config文件中的内容。以关键字REQUIRE开头的是模拟中需要用到的模块。USERSETUPVARS是指在setup这步时输入的可选参数，如果利用到三温模块（具体什么是三温后续会进行讲解），那么会调用其他的一些热传导以及扩散的模块。DATAFILES是指在模拟中会用到的一些数据文件。这里需要用到He气以及Al的状态方程和不透明度的表，这些表文件必须和case放在同一个文件夹中，否则无法成功复制到组件好的运行程序文件夹中。以D开头的为注释。PARAMETER是在模拟中会用到的一些模拟参数。在模拟中用做输入，或者会在不同文件中用到的数据，都需要在这里定义，否则会出错。在定义参数时需要指定参数名，参数类型，以及数据初始值。
Simulation_data.F90  在Config中注册的参量需要在Simulation_data.F90中指定数据类型从而传入并储存。
Simulation_init.F90  init顾名思义是进行初始化的。在这个case中我们需要从将从flash.par中读入的数据赋值给相应的参数并将其储存在程序中。函数RuntimeParameters_get()就是用来从flash.par中读取相应参数。
Simulation_initBlock.F90  在这些文件中最重要的就是这个文件。通过改变文件中的相应参数，可以决定靶的初始形状，初始位置等等。因此对这个文件需要进行详细的讲解。
 接下来利用三个循环将不同位置处的参量进行具体的定义。NDIM是在setup时定义的维度，species这个参量是用来区分是否为我们设定的不同粒子的信息。由于Flash不能解真空态，所以必须布上一些低密度的背景气体；在这个case中是利用He气作为背景气体的。确定好不同位置处的密度，温度等信息。利用Grid_putPointData这个函数将具体的信息赋值给程序计算。
 将所有的参量定义完成之后，就可以将之前用到的数组等的内存释放。这里需要注意的是画红线处的NDIM==2需要改成为NDIM&amp;gt;=2；在不做三维的有磁场的情况时，这个case一般是对的。如果一旦做三维且有磁场的case，如果不做修正，相当于这里始终不会进入facez的那一步，所以会很快发现模拟盒子中磁场变得很小。
 基本上Simulation_initBlock.F90中的部分就都讲解的差不多了，接下来我们说flash.par文件。
Flash.par  flash.par就是Flash程序中的输入部分，在LaserSlab这个case中我们使用example.par这个文件。读者可以修改里面的具体参数改变你的输入值。在这里具体讲解一下激光注入部分吧，其他部分都很好理解。
 打开激光能量沉积的开关，规定使用的最高光线数目，注意后面的所有激光的光线数目的总和不能超过这个值。Laser pulse为激光的脉冲波形；beam为具体的激光参数。lens为激光注入的位置，注意该位置要在模拟box之外。target为激光想要对准的盒子内的位置。接下来是激光的焦斑半径的大小。激光脉冲的参数，之前定义的以及激光的波长，波长的单位是微米。接着是截面分布类型以及高斯形焦斑的分布。剩下的基本不需要修改了，但在二维的直角坐标中截面以及gridType只能用1维的。
 需要说明的是在这里打开了激光3Din2D的算法，所以只能用柱坐标。柱坐标中的y就是z，所以注意这里激光注入的时候box中的y的部分为z的部分。
Makefile  Makefile在这里是Simulation部分的，不是标准的make文件。在setup时会生成标准的gnu/make文件。在这里一般只需要写Simulation_data.o就可以，其他部分都在顶层的SimulationMain中有写。如果用到了其他的程序文件，在这里也需要写明。
 好了，基本上我们就把LaserSlab这个case讲解完了，后面我们会运行这个case，并讲解一下初步的后处理方法。希望可以帮到大家。</description>
    </item>
    
    <item>
      <title>Flash 程序使用总结</title>
      <link>http://leizhuray.me/myblog/post/flash_01/</link>
      <pubDate>Sat, 30 Jan 2021 20:39:45 +0800</pubDate>
      
      <guid>http://leizhuray.me/myblog/post/flash_01/</guid>
      <description>Flash程序使用（一） 写在开头的话 今年已经是我博士入学的第四个年头，回想过去的博士生活，总觉的自己似乎什么没留下，因此想着从今天开始，有时间就整理一下自己博士期间的一些工作吧。就先从我经常使用的辐射流体程序Flash开始写起吧。今天这一章里就主要讲一下Flash程序的起源以及它主要可以用来做什么吧。笔者个人能力有限，如果有任何问题欢迎大家评说讨论。
Flash程序简介 Flash发展历史  听到Flash这个名字，可能你最先想起的是网页上的flash插件或者说是做动画的软件，但在天文或者活激光等离子体领域，Flash已经声名远扬。Flash是由芝加哥大学开发的一款自适应网格辐射流体力学软件，其官网链接为http://flash.uchicago.edu/site/。Flash的最初版本上线于20年前，现在的最新版本为4.6.2版。如果读者有意愿想使用Flash的code，可以在申请页面上申请下载账户。写明你的身份以及你想用Flash做什么后，一般会在1~2天内收到下载的账号，通过下载页面使用Flash中心邮件发给你的账号登录下载即可。
 芝加哥大学团队最初开发Flash的目的是用来研究包含核反应的天体物理过程，包括超新星爆发，X射线暴等。近年来随着模块的增加，特别是高能量密度物理模块的添加，越来越多的激光等离子体物理学家也开始利用Flash进行一些实验模拟研究。我个人认为，基本国内大部分做激光辐射流体的组都是依靠Flash在做基本的模拟计算，如果Flash不开源的话，大家手头可能都没有一个合适的程序进行计算。据Flash中心主任Tzeferacos的数据，现在全世界大约有3000多名天文活等离子体物理研究者利用Flash进行许多交叉科学的研究。
Flash程序功能 首先我们来看一张超炫的三维模拟图。
 上图为利用Flash软件模拟OMEGA上的dynamo放大自生磁场的三维模拟结果，文章原文可见链接。Flash中心主任TZEFERACOS以及DONALD LAMB通过该研究获得了2019年APS的John Dawson Award。
 Flash软件功能巨多，我在这里可能列举不全，很多功能与包库在平常的科研中我也没有用到。在这里以小点的形式总结一下。
 理想流体或磁流体计算模块 辐射转移模块-多群组辐射 激光注入模块（能量沉积及光线） 粒子模块 重力模块 核反应模块 实验诊断模块  质子成像 汤姆逊散射模块 X光成像模块   非理想流体计算  磁电阻项 霍尔项 Biermann磁场   状态方程及不透明度   Flash程序体量巨大，用户使用手册就有617页之厚（Flash4.6版手册），因此想要弄懂程序中的所有东西所耗费的时间是不可想象的。因此我建议读者有使用到哪些模块进行针对性的选读就可以。在后续的章节中我将详细阐述Flash计算的基本方程以及某些模块的使用。
Flash程序安装 依赖包库  HDF5模块  Flash的数据输出依赖于hdf5包库的安装   F90以及C编译器  Flash中的绝大部分是使用Fortran语言进行编写，部分外挂程序库是使用C语言的，所以Fortran编译器以及C编译器是必须的。   MPI并行  如果要进行大规模的科学进行，并行是必不可少的。大规模计算也可以放在超算上进行并行计算。   HYPRE 解法器  Hypre 解法器是在进行高能量密度物理（一般是由高功率激光激光注入时）需要用到的，其中的多群组辐射和热传导依赖于该解法器的存在。   GNU  程序编译中需要使用make，所以gnu的安装也是必须的。   Python  在运行setup脚本时需要用到python程序，安装python2版本，似乎最新版也对python3进行了支持，还没有下载尝试。Flash利用setup脚本将用到模块代码打包组装到一起。    镜像安装依赖库  Flash官方中心在其Github主页上提供了Flash4依赖包库的镜像打包版，如果只是尝鲜的用户可以使用dock拉载该镜像，如果长期用作科研的，还是建议在个人电脑或者服务器上安装好必备的依赖库。</description>
    </item>
    
    <item>
      <title>The First</title>
      <link>http://leizhuray.me/myblog/post/test/</link>
      <pubDate>Sun, 30 Aug 2020 20:39:45 +0800</pubDate>
      
      <guid>http://leizhuray.me/myblog/post/test/</guid>
      <description>Hi 大家好，我是Ray，来自北京大学物理学院的在读博士生。这是本站的第一篇博客，我希望再以后的日子里可以常更新，把我日常生活中的一些小事随笔或者生活感悟，亦或是一些学习到的知识写成博客分享给大家。</description>
    </item>
    
  </channel>
</rss>